-- 저장 프로시저 생성하기
DROP TABLE EMP01;
CREATE TABLE EMP01
AS
SELECT * FROM EMP;

SELECT * FROM EMP01;

CREATE OR REPLACE PROCEDURE DEL_ALL
IS
BEGIN
    DELETE FROM EMP01;
END;
/

--저장 프로시저 실행
EXECUTE DEL_ALL;

-- 저장 프로시저 조회하기
SELECT NAME, TEXT FROM USER_SOURCE;

-- 매개변수 저장 프로시저
DROP TABLE EMP01;
CREATE TABLE EMP01
AS
SELECT * FROM EMP;

CREATE OR REPLACE PROCEDURE DEL_ENAME(VENAME EMP01.ENAME%TYPE)
IS
BEGIN
    DELETE FROM EMP01
    WHERE ENAME=VENAME;
END;
/

EXECUTE DEL_ENAME('SMITH');

SELECT * FROM EMP01;

-- IN, OUT, INOUT 매개변수
DROP PROCEDURE SEL_EMPNO;
CREATE OR REPLACE PROCEDURE SEL_EMPNO
    (VEMPNO IN EMP.EMPNO%TYPE,
    VENAME OUT EMP.ENAME%TYPE,
    VSAL OUT EMP.SAL%TYPE,
    VJOB OUT EMP.JOB%TYPE)
IS
BEGIN
    SELECT ENAME, SAL, JOB INTO VENAME, VSAL, VJOB
    FROM EMP
    WHERE EMPNO=VEMPNO;
END;
/
-- 바인드 변수
-- ':'를 덧붙여주는 변수는 미리 선언되어 있어야 한다.
VARIABLE VAR_ENAME VARCHAR2(15);
VARIABLE VAR_SAL NUMBER;
VARIABLE VAR_JOB VARCHAR2(9);
-- OUT 매개변수에서 값을 받아오기 위해서는 프로시저 호출 시 변수 앞에 ':'를 덧붙인다.
EXECUTE SEL_EMPNO(7788, :VAR_ENAME, :VAR_SAL, :VAR_JOB);
PRINT VAR_ENAME;
PRINT VAR_SAL;
PRINT VAR_JOB;
SELECT ENAME, SAL, JOB FROM EMP
WHERE EMPNO=7788;

--과제 : 사원명으로 검색하여 해당 사원의 직급을 얻어 오는 저장 프로시저를 SEL_EMPNAME라는 이름으로 작성하라.
CREATE OR REPLACE PROCEDURE SEL_EMPNAME
    (VENAME IN EMP.ENAME%TYPE,
     VJOB OUT EMP.JOB%TYPE)
IS
BEGIN
    SELECT JOB INTO VJOB
    FROM EMP
    WHERE ENAME = VENAME;
END;
/

VARIABLE VAR_JOB VARCHAR2(9);
EXECUTE SEL_EMPNAME('SCOTT', :VAR_JOB);
PRINT VAR_JOB